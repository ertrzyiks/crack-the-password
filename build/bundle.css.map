{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Game.svelte",
    "../../Button.svelte",
    "../../Progress.svelte",
    "../../Form.svelte",
    "../../Letter.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Game from './Game.svelte';\n    import Button from './Button.svelte';\n    import four from '../data/words_alpha_4'\n\n    let word = getRandomWord(four)\n    let isStarted = false\n    let lastGameStatus\n\n\n    function onFinish(e) {\n        lastGameStatus = e.detail.success\n    }\n\n    function tryAgain() {\n        word = getRandomWord(four)\n        lastGameStatus = undefined\n    }\n\n    function getRandomWord(list) {\n        return list[Math.round(Math.random() * list.length)]\n    }\n</script>\n\n<main>\n    <h1>Crack the Password!</h1>\n\n    {#if isStarted}\n        <Game word={word} duration={60} on:finish={onFinish} />\n\n        {#if typeof lastGameStatus !== 'undefined'}\n            <div style=\"margin-top: 2em\">\n                <Button type=\"button\" onClick={tryAgain} label=\"Try Again\" />\n            </div>\n        {/if}\n    {:else}\n        <div style=\"max-width: 18em; margin: 0 auto;\">\n            <p>\n                You have 60 seconds and unlimited attempts to guess the password.\n            </p>\n\n            <p>\n              The password is a singular noun in English.\n            </p>\n\n            <p>\n              Each matching letter will be revealed.\n            </p>\n        </div>\n\n        <div style=\"margin-top: 2em\">\n            <Button type=\"button\" onClick={() => isStarted = true} label=\"Start\" />\n        </div>\n    {/if}\n\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t  color: #fefefe;\n\t  text-shadow: 3px 3px 0 #311443;\n\t  font-size: 2rem;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>\n",
    "<script>\n    import Letter from './Letter.svelte'\n    import Progress from './Progress.svelte'\n    import Form from './Form.svelte'\n    import { createEventDispatcher, onMount } from 'svelte'\n\n    import { onInterval } from './utils'\n\n\texport let word;\n\texport let duration;\n\n    const dispatch = createEventDispatcher();\n\n    let start = new Date().getTime()\n    let now = new Date().getTime()\n\n\tlet matches = []\n    let interval\n    let status = 'active'\n\n    onMount(() => {\n        interval = onInterval(() => now = new Date().getTime(), 500)\n    })\n\n    $: letters = word.split('')\n    $: until = start + duration * 1000\n    $: timeLeft = Math.round((until - now) / 1000)\n    $: if (word) {\n        status = 'active'\n        matches = []\n        start = new Date().getTime()\n        interval = onInterval(() => now = new Date().getTime(), 500)\n    }\n\n    $: if (timeLeft <= 0) {\n        if (status === 'active') {\n            status = 'fail'\n            letters.forEach((letter, index) => markAsGuessed(index))\n            clearInterval(interval)\n\n            dispatch('finish', {\n                success: false\n            })\n        }\n    }\n\n    function onSubmit(e) {\n      processUserInput(e.detail.value).forEach(index => markAsGuessed(index))\n    }\n\n     function processUserInput(value) {\n        return letters\n            .map((letter, index) => value[index] === letter)\n            .reduce((currentMatches, matches, index) => {\n                if (matches) {\n                    return [...currentMatches, index]\n                }\n\n                return currentMatches\n            },[])\n     }\n\n     function markAsGuessed(index) {\n        if (!isGuessed(index)) {\n            matches = [...matches, index];\n        }\n\n        if (status === 'active' && matches.length === letters.length) {\n          status = 'win'\n          dispatch('finish', {\n            success: true\n          })\n        }\n     }\n\n     function isGuessed(index) {\n        return matches.includes(index)\n     }\n</script>\n\n<div>\n    <div class=\"letters\">\n        {#each letters as letter, i}\n            <Letter value={letter} uncovered={matches.includes(i)}/>\n        {/each}\n    </div>\n\n    {#if status === 'active'}\n        <div style=\"margin-top: 2em;\">\n            <Form desiredLength={word.length} on:submit={onSubmit} />\n\n            <div style=\"margin-top: 4rem;\">\n                <Progress value={duration - timeLeft} total={duration} />\n            </div>\n        </div>\n    {:else if status === 'win'}\n        <div>You won!</div>\n    {:else}\n        <div style=\"margin-bottom: 1em;\">Time's up!</div>\n        <div>Don't know the word? <a href=\"https://www.dictionary.com/browse/{encodeURIComponent(word)}\">Look it up in the dictionary.</a></div>\n    {/if}\n</div>\n\n<style>\n.letters {\n  display: flex;\n  justify-content: center;\n  padding-bottom: 1.5rem;\n  padding-top: 0.5rem;\n}\na {\n  color: #ffb100;\n  text-decoration: none;\n}\na:hover {\n  text-decoration: underline;\n}\n</style>\n",
    "<script>\nexport let label\nexport let type\nexport let onClick = () => {}\n</script>\n\n<button type={type} on:click={onClick}>{label}</button>\n\n<style>\nbutton {\n\tbackground-color: transparent;\n\tborder: 1px solid #241d13;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor: #ffffff;\n\tfont-size:15px;\n\tfont-weight:bold;\n\tfont-family: 'Permanent Marker', cursive;\n\tletter-spacing: 0.3em;\n\tpadding: 9px 23px;\n\ttext-decoration:none;\n\tbox-shadow: 3px 3px 0 #333;\n}\nbutton:hover {\n\tbox-shadow: 3px 3px 0 #333, inset 0px 34px 0px -15px #5e2382;\n}\nbutton:active {\n\tposition: relative;\n\ttop: 1px;\n}\n</style>\n",
    "<script>\nexport let value\nexport let total\n</script>\n\n<div class=\"wrapper\">\n  <div class=\"bar\" style=\"width: {Math.ceil(value / total * 100)}%;\"/>\n</div>\n\n<style>\n    .wrapper {\n      height: 10px;\n      background-color: #fefefe;\n      width: 100%;\n    }\n    .bar {\n      height: 10px;\n      background-color: #ffb100;\n      transition: width 1000ms;\n    }\n</style>\n",
    "<script>\nimport { createEventDispatcher } from 'svelte'\nimport Button from './Button.svelte'\n\nexport let desiredLength;\n\nlet userInput = ''\n\nconst dispatch = createEventDispatcher();\n\nfunction onSubmit(e) {\n    e.preventDefault()\n\n    if (userInput.length !== desiredLength) {\n        return\n    }\n\n    dispatch('submit', { value: userInput })\n    userInput = ''\n }\n</script>\n\n<form on:submit={onSubmit}>\n    <input bind:value={userInput} type=\"text\" maxlength={desiredLength}/>\n    <Button type=\"submit\" label=\"Submit\"/>\n</form>\n\n<style>\ninput {\n    background-color: #fefefe;\n\tborder: 1px solid #241d13;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor: #333;\n\tfont-size:15px;\n\tfont-weight:bold;\n\tfont-family: 'Permanent Marker', cursive;\n\tletter-spacing: 0.3em;\n\tpadding: 9px 23px;\n\ttext-decoration:none;\n\tbox-shadow: 3px 3px 0 #333;\n    outline: none;\n}\n</style>\n",
    "<script>\n    export let value;\n    export let uncovered;\n\n    $: displayValue = uncovered ? value : ''\n</script>\n\n<div>\n  {displayValue}\n</div>\n\n<style>\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #333;\n    background-color: #fefefe;\n    font-size: 1.3rem;\n    width: 1.6em;\n    height: 1.6em;\n    display: inline-block;\n    box-shadow: 4px 4px 0 #311443;\n    margin-right: 1em;\n  }\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AA0DC,IAAI,cAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAC9B,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;AC6BF,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,IAAI,AACvB,CAAC,AACD,eAAC,MAAM,AAAC,CAAC,AACP,eAAe,CAAE,SAAS,AAC5B,CAAC;AC3GD,MAAM,cAAC,CAAC,AACP,gBAAgB,CAAE,WAAW,CAC7B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,QAAQ,YAAY,CACpB,OAAO,OAAO,CACd,KAAK,CAAE,OAAO,CACd,UAAU,IAAI,CACd,YAAY,IAAI,CAChB,WAAW,CAAE,kBAAkB,CAAC,CAAC,OAAO,CACxC,cAAc,CAAE,KAAK,CACrB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,gBAAgB,IAAI,CACpB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,AAC3B,CAAC,AACD,oBAAM,MAAM,AAAC,CAAC,AACb,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,AAC7D,CAAC,AACD,oBAAM,OAAO,AAAC,CAAC,AACd,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,AACT,CAAC;ACnBG,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,KAAK,CAAC,MAAM,AAC1B,CAAC;ACSL,KAAK,eAAC,CAAC,AACH,gBAAgB,CAAE,OAAO,CAC5B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,QAAQ,YAAY,CACpB,OAAO,OAAO,CACd,KAAK,CAAE,IAAI,CACX,UAAU,IAAI,CACd,YAAY,IAAI,CAChB,WAAW,CAAE,kBAAkB,CAAC,CAAC,OAAO,CACxC,cAAc,CAAE,KAAK,CACrB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,gBAAgB,IAAI,CACpB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CACvB,OAAO,CAAE,IAAI,AACjB,CAAC;AC9BC,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,OAAO,CACzB,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAC7B,YAAY,CAAE,GAAG,AACnB,CAAC"
}